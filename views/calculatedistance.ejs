<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Fetch Published Rides</title>
  </head>
  <body>
    <ul id="distances-list"></ul>
    <!-- Your HTML content here -->

    <script>
      // JavaScript code goes here
      // Fetch location2 from the server
      fetch("/getLocation2")
        .then((response) => response.json())
        .then((data) => {
          const location2 = data.location2;
          console.log("Location2:", location2);

          // Now you can use location2 in your fetch request to /fetchPublishedRides and other functions
          fetch("/fetchPublishedRides")
            .then((response) => response.json())
            .then((publishedRides) => {
              // Array to store distances for each ride
              const distancesList = [];

              // Check if location2 is defined
              if (location2) {
                // Calculate distance between location2 and each published ride's location
                publishedRides.forEach((ride) => {
                  const rideLatitude = parseFloat(
                    ride.coordinates.split(",")[1]
                  );
                  const rideLongitude = parseFloat(
                    ride.coordinates.split(",")[0]
                  );
                  const distance = calculateDistance(
                    location2[1],
                    location2[0],
                    rideLatitude,
                    rideLongitude
                  );
                  console.log("Distance to ride:", distance, "km");

                  // Store the distance for each ride
                  distancesList.push({ rideId: ride._id, distance });
                });

                // Display distances on the web page
                displayDistances(distancesList);

                // Send the distances data to the server
                sendDistancesToServer(distancesList);
              } else {
                console.error("Location2 is undefined");
              }
            })
            .catch((error) =>
              console.error("Error fetching published rides:", error)
            );
        });

      // Function to calculate distance between two points using Haversine formula
      function calculateDistance(lat1, lon1, lat2, lon2) {
        const R = 6371; // Radius of the Earth in kilometers
        const dLat = deg2rad(lat2 - lat1);
        const dLon = deg2rad(lon2 - lon1);
        const a =
          Math.sin(dLat / 2) * Math.sin(dLat / 2) +
          Math.cos(deg2rad(lat1)) *
            Math.cos(deg2rad(lat2)) *
            Math.sin(dLon / 2) *
            Math.sin(dLon / 2);
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        const distance = R * c; // Distance in kilometers
        return distance;
      }

      // Function to convert degrees to radians
      function deg2rad(deg) {
        return deg * (Math.PI / 180);
      }

      // Function to display distances on the web page
      function displayDistances(distancesList) {
        // Get the distances list element
        const distancesListElement = document.getElementById("distances-list");

        // Clear previous content
        distancesListElement.innerHTML = "";

        // Append distances to the list
        distancesList.forEach((item) => {
          const listItem = document.createElement("li");
          listItem.textContent = `Ride ID: ${item.rideId}, Distance: ${item.distance} km`;
          distancesListElement.appendChild(listItem);
        });
      }

      // Function to send distances data to the server
      function sendDistancesToServer(distancesList) {
        fetch("/calculateDistances", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ distances: distancesList }), // Send the distances data to the server
        })
          .then((response) => response.json())
          .then((data) => {
            console.log("Distances data sent to server:", data);
          })
          .catch((error) =>
            console.error("Error sending distances data to server:", error)
          );
      }
    </script>
  </body>
</html>
